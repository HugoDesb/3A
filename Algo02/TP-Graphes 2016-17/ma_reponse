C'est parti :

Impression d'un graphe non orienté dans toutes les couleurs :

graph{ a[label=a]; b[label=b]; c[label="c*"]; d[label=d]; e[label=e]; a -- a[color=red]; b -- b[color=green3]; c -- c[color=blue]; d -- d[color=yellow] }

Impression du même graphe en noir et blanc :

graph{ a[label=a]; b[label=b]; c[label="c*"]; d[label=d]; e[label=e]; a -- a; b -- b; c -- c; d -- d }

Impression d'un graphe orienté dans toutes les couleurs :

digraph{ a[label=a]; b[label=b]; c[label="c*"]; d[label=d]; e[label=e]; a -> a[color=red]; b -> b[color=green3]; b -> e[color=yellow]; c -> c[color=blue]; c -> d[color=darkviolet]; d -> d[color=yellow]; e -> b[color=yellow] }

Impression de ce graphe en gardant la seule dernière couleur :

digraph{ a[label=a]; b[label=b]; c[label="c*"]; d[label=d]; e[label=e]; a -> a; b -> b; b -> e; c -> c; c -> d[color=darkviolet]; d -> d; e -> b }

Impression qui se limite aux couleurs jusqu'au VERT :

digraph{ a[label=a]; b[label="b / 25"]; c[label="c*"]; d[label=d]; e[label="e* / 15"]; a -> a[color=red]; b -> b[color=green3] }

Variante où on se limite aux couleurs jusqu'au JAUNE :

digraph{ a[label=a]; b[label="b / 25"]; c[label="c*"]; d[label=d]; e[label="e* / 15"]; a -> a; b -> b; b -> e[color=yellow]; c -> c; d -> d[color=yellow]; e -> b[color=yellow] }

Un graphe orienté pondéré et polychrome :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[color=red,label="-inf"]; b -> c[color=green3,label=17]; c -> c[color=yellow,label=-119]; c -> d[color=blue,label=55]; d -> e[color=green3,label=-40]; e -> d[color=green3,label=-40]; e -> f[color=blue,label=-157]; rankdir=LR }

On enlève un arc et se limite au JAUNE en uni-colore :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[label="-inf"]; b -> c[label=17]; c -> c[color=yellow,label=-119]; c -> d[label=55]; e -> d[label=-40]; e -> f[label=-157]; rankdir=LR }

Impression de toutes les étapes de couleurs intermédiaires :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[color=red,label="-inf"]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[label="-inf"]; b -> c[color=green3,label=17]; e -> d[color=green3,label=-40]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[label="-inf"]; b -> c[label=17]; c -> d[color=blue,label=55]; e -> d[label=-40]; e -> f[color=blue,label=-157]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[label="-inf"]; b -> c[label=17]; c -> c[color=yellow,label=-119]; c -> d[label=55]; e -> d[label=-40]; e -> f[label=-157]; rankdir=LR }

Et le dernier, à afficher avec l'option circo :

digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; b -> c[color=red,label=10] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; b -> c[color=red,label=10]; c -> d[color=green3,label=15]; d -> c[color=green3,label=15] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; b -> c[color=red,label=10]; c -> d[color=green3,label=15]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; b -> c[color=red,label=10]; c -> d[color=green3,label=15]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; e -> f[color=yellow,label=25]; f -> e[color=yellow,label=25] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; b -> c[color=red,label=10]; c -> d[color=green3,label=15]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; e -> f[color=yellow,label=25]; f -> a[color=orange,label=30]; f -> e[color=yellow,label=25] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; a -> c[color=darkviolet,label=35]; b -> c[color=red,label=10]; c -> d[color=green3,label=15]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; e -> f[color=yellow,label=25]; f -> a[color=orange,label=30]; f -> e[color=yellow,label=25] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; a -> c[color=darkviolet,label=35]; b -> c[color=red,label=10]; c -> d[color=green3,label=15]; c -> e[color=gold,label=40]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; e -> f[color=yellow,label=25]; f -> a[color=orange,label=30]; f -> e[color=yellow,label=25] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; a -> c[color=darkviolet,label=35]; a -> e[color=magenta,label=45]; b -> c[color=red,label=10]; c -> d[color=green3,label=15]; c -> e[color=gold,label=40]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; e -> a[color=magenta,label=45]; e -> f[color=yellow,label=25]; f -> a[color=orange,label=30]; f -> e[color=yellow,label=25] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; a -> c[color=darkviolet,label=35]; a -> e[color=magenta,label=45]; b -> c[color=red,label=10]; b -> d[color=grey,label=50]; c -> d[color=green3,label=15]; c -> e[color=gold,label=40]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; e -> a[color=magenta,label=45]; e -> f[color=yellow,label=25]; f -> a[color=orange,label=30]; f -> e[color=yellow,label=25] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; a -> c[color=darkviolet,label=35]; a -> e[color=magenta,label=45]; b -> c[color=red,label=10]; b -> d[color=grey,label=50]; c -> d[color=green3,label=15]; c -> e[color=gold,label=40]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; d -> f[color=deepskyblue,label=55]; e -> a[color=magenta,label=45]; e -> f[color=yellow,label=25]; f -> a[color=orange,label=30]; f -> d[color=deepskyblue,label=55]; f -> e[color=yellow,label=25] }


digraph{ a[label="a*"]; b[label=b]; c[label="c* / 25"]; d[label=d]; e[label=e]; f[label="f / 10543"]; a -> b[label=5]; a -> c[color=darkviolet,label=35]; a -> e[color=magenta,label=45]; b -> c[color=red,label=10]; b -> d[color=grey,label=50]; b -> f[color=chartreuse,label=60]; c -> d[color=green3,label=15]; c -> e[color=gold,label=40]; d -> c[color=green3,label=15]; d -> d[color=blue,label=-44]; d -> e[color=blue,label=20]; d -> f[color=deepskyblue,label=55]; e -> a[color=magenta,label=45]; e -> f[color=yellow,label=25]; f -> a[color=orange,label=30]; f -> b[color=chartreuse,label=60]; f -> d[color=deepskyblue,label=55]; f -> e[color=yellow,label=25] }

Graphe G_5_nonpond_S non orienté : 1

Le graphe G_5_nonpond_S :

graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; a -- b[color=red,label="**0 / 0**"]; b -- c[color=red,label="**0 / 0**"]; b -- d[color=red,label="**0 / 0**"]; c -- d[color=red,label="**0 / 0**"]; d -- e[color=red,label="**0 / 0**"]; rankdir=LR }

Graphe G_6_nonpond_DAG non orienté : 0

Le graphe G_6_nonpond_DAG :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> d; a -> e; b -> a; b -> d; c -> b; e -> d; f -> c; rankdir=LR }

Graphe G_5_nonpond_S anti-réflexif : 1

Le graphe G_5_nonpond_S fermé réflexivement :

graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; a -- a[color=red,label="**0 / 0**"]; a -- b[label="**0 / 0**"]; b -- b[color=red,label="**0 / 0**"]; b -- c[label="**0 / 0**"]; b -- d[label="**0 / 0**"]; c -- c[color=red,label="**0 / 0**"]; c -- d[label="**0 / 0**"]; d -- d[color=red,label="**0 / 0**"]; d -- e[label="**0 / 0**"]; e -- e[color=red,label="**0 / 0**"]; rankdir=LR }

G_5_nonpond_S n'est plus anti-réflexif : 0

Le graphe G_6_nonpond_DAG est anti-réflexif : 1

Graphe G_6_nonpond_DAG anti-réflexif et anti-symétrique : 1

Le degré du graphe symétrique G_5_nonpond_S fermé réflexivement : 2

Le graphe G_9_nonpond_S :

graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; a -- b; a -- c; b -- d; c -- e; d -- d; d -- e; e -- f; g -- h; h -- h; h -- i; rankdir=LR }

Les étapes de propagation des vagues dans G_9_nonpond_S :

graph{ a[label="a* / 0"]; b[label="b* / 1"]; c[label="c* / 1"]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; a -- b[color=red]; a -- c[color=red]; b -- d; c -- e; d -- d; d -- e; e -- f; g -- h; h -- h; h -- i; rankdir=LR }


graph{ a[label="a* / 0"]; b[label="b* / 1"]; c[label="c* / 1"]; d[label="d* / 2"]; e[label="e* / 2"]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; a -- b[color=red]; a -- c[color=red]; b -- d[color=green3]; c -- e[color=green3]; d -- d; d -- e; e -- f; g -- h; h -- h; h -- i; rankdir=LR }


graph{ a[label="a* / 0"]; b[label="b* / 1"]; c[label="c* / 1"]; d[label="d* / 2"]; e[label="e* / 2"]; f[label="f* / 3"]; g[label=g]; h[label=h]; i[label=i]; a -- b[color=red]; a -- c[color=red]; b -- d[color=green3]; c -- e[color=green3]; d -- d; d -- e; e -- f[color=blue]; g -- h; h -- h; h -- i; rankdir=LR }


graph{ a[label="a* / 0"]; b[label="b* / 1"]; c[label="c* / 1"]; d[label="d* / 2"]; e[label="e* / 2"]; f[label="f* / 3"]; g[label="g* / 0"]; h[label="h* / 1"]; i[label=i]; a -- b[color=red]; a -- c[color=red]; b -- d[color=green3]; c -- e[color=green3]; d -- d; d -- e; e -- f[color=blue]; g -- h[color=red]; h -- h; h -- i; rankdir=LR }


graph{ a[label="a* / 0"]; b[label="b* / 1"]; c[label="c* / 1"]; d[label="d* / 2"]; e[label="e* / 2"]; f[label="f* / 3"]; g[label="g* / 0"]; h[label="h* / 1"]; i[label="i* / 2"]; a -- b[color=red]; a -- c[color=red]; b -- d[color=green3]; c -- e[color=green3]; d -- d; d -- e; e -- f[color=blue]; g -- h[color=red]; h -- h; h -- i[color=green3]; rankdir=LR }

Il y a 2 composantes connexes.

Le graphe G_9_arbre est un arbre : 0

graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; a -- b; a -- e; b -- c; b -- d; e -- f; f -- g; f -- h; f -- i }

Ce graphe est un arbre : 0

graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; a -- b; a -- e; b -- c; b -- g; e -- f; f -- g; f -- h; f -- i }

Le graphe G_9_nonpond_NS avec les distances depuis 0 :

digraph{ a[label="a* / 0"]; b[label="b / 1"]; c[label="c / 2"]; d[label="d / 3"]; e[label="e / 1"]; f[label="f / 2"]; g[label="g / 3"]; h[label="h / 2"]; i[label="i / 3"]; a -> b; a -> e; b -> c; b -> e; b -> f; c -> b; c -> d; c -> e; c -> f; c -> h; d -> c; d -> f; d -> g; d -> i; e -> b; e -> c; e -> f; e -> h; f -> c; f -> d; f -> e; f -> g; f -> h; g -> d; g -> f; g -> h; g -> i; h -> e; h -> g; h -> i }

Le tri topologique de G_6_nonpond_DAG donne :

digraph{ a[label="a* / 3"]; b[label="b* / 2"]; c[label="c* / 1"]; d[label="d* / 5"]; e[label="e* / 4"]; f[label="f* / 0"]; a -> d[color=yellow]; a -> e[color=yellow]; b -> a[color=blue]; b -> d[color=blue]; c -> b[color=green3]; e -> d[color=orange]; f -> c[color=red]; rankdir=LR }

Le tri topologique de G_8_ARAS_non_DAG donne :
LE GRAPHE COMPORTE DES CIRCUITS !

digraph{ a[label="a* / 0"]; b[label="b* / 1"]; c[label=c]; d[label="d* / 0"]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> b[color=red]; b -> c; c -> e; d -> e; e -> f; f -> g; g -> c; g -> h; rankdir=LR }

La multiplication matricielle donne ces étapes pour G_8_nonpond_S :

graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -- b; b -- c; b -- d; c -- d; d -- e; d -- f; f -- g; g -- h; rankdir=LR }


graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -- a[color=red]; a -- b; b -- b[color=red]; b -- c; b -- d; c -- c[color=red]; c -- d; d -- d[color=red]; d -- e; d -- f; e -- e[color=red]; f -- f[color=red]; f -- g; g -- g[color=red]; g -- h; h -- h[color=red]; rankdir=LR }


graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -- a; a -- b; a -- c[color=green3]; a -- d[color=green3]; b -- b; b -- c; b -- d; b -- e[color=green3]; b -- f[color=green3]; c -- c; c -- d; c -- e[color=green3]; c -- f[color=green3]; d -- d; d -- e; d -- f; d -- g[color=green3]; e -- e; e -- f[color=green3]; f -- f; f -- g; f -- h[color=green3]; g -- g; g -- h; h -- h; rankdir=LR }


graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -- a; a -- b; a -- c; a -- d; a -- e[color=blue]; a -- f[color=blue]; a -- g[color=blue]; b -- b; b -- c; b -- d; b -- e; b -- f; b -- g[color=blue]; b -- h[color=blue]; c -- c; c -- d; c -- e; c -- f; c -- g[color=blue]; c -- h[color=blue]; d -- d; d -- e; d -- f; d -- g; d -- h[color=blue]; e -- e; e -- f; e -- g[color=blue]; e -- h[color=blue]; f -- f; f -- g; f -- h; g -- g; g -- h; h -- h; rankdir=LR }


graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -- a; a -- b; a -- c; a -- d; a -- e; a -- f; a -- g; a -- h[color=yellow]; b -- b; b -- c; b -- d; b -- e; b -- f; b -- g; b -- h; c -- c; c -- d; c -- e; c -- f; c -- g; c -- h; d -- d; d -- e; d -- f; d -- g; d -- h; e -- e; e -- f; e -- g; e -- h; f -- f; f -- g; f -- h; g -- g; g -- h; h -- h; rankdir=LR }

Floyd-Warshall donne ces étapes pour G_8_nonpond_S_bis :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> b; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a[color=red]; a -> b; a -> c[color=red]; a -> d[color=red]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a; a -> b; a -> c; a -> d; b -> a[color=green3]; b -> b[color=green3]; b -> c[color=green3]; b -> d[color=green3]; b -> e[color=green3]; b -> f[color=green3]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a; a -> b; a -> c; a -> d; b -> a; b -> b; b -> c; b -> d; b -> e; b -> f; c -> a[color=blue]; c -> b[color=blue]; c -> c[color=blue]; c -> d[color=blue]; c -> e[color=blue]; c -> f[color=blue]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a; a -> b; a -> c; a -> d; b -> a; b -> b; b -> c; b -> d; b -> e; b -> f; c -> a; c -> b; c -> c; c -> d; c -> e; c -> f; d -> a[color=yellow]; d -> b[color=yellow]; d -> c[color=yellow]; d -> d[color=yellow]; d -> e[color=yellow]; d -> f[color=yellow]; d -> g[color=yellow]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a; a -> b; a -> c; a -> d; b -> a; b -> b; b -> c; b -> d; b -> e; b -> f; c -> a; c -> b; c -> c; c -> d; c -> e; c -> f; d -> a; d -> b; d -> c; d -> d; d -> e; d -> f; d -> g; e -> a[color=orange]; e -> b[color=orange]; e -> c[color=orange]; e -> d[color=orange]; e -> e[color=orange]; e -> f[color=orange]; e -> g[color=orange]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a; a -> b; a -> c; a -> d; b -> a; b -> b; b -> c; b -> d; b -> e; b -> f; c -> a; c -> b; c -> c; c -> d; c -> e; c -> f; d -> a; d -> b; d -> c; d -> d; d -> e; d -> f; d -> g; e -> a; e -> b; e -> c; e -> d; e -> e; e -> f; e -> g; f -> a[color=darkviolet]; f -> b[color=darkviolet]; f -> c[color=darkviolet]; f -> d[color=darkviolet]; f -> e[color=darkviolet]; f -> f[color=darkviolet]; f -> g[color=darkviolet]; f -> h[color=darkviolet]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a; a -> b; a -> c; a -> d; b -> a; b -> b; b -> c; b -> d; b -> e; b -> f; c -> a; c -> b; c -> c; c -> d; c -> e; c -> f; d -> a; d -> b; d -> c; d -> d; d -> e; d -> f; d -> g; e -> a; e -> b; e -> c; e -> d; e -> e; e -> f; e -> g; f -> a; f -> b; f -> c; f -> d; f -> e; f -> f; f -> g; f -> h; g -> a[color=gold]; g -> b[color=gold]; g -> c[color=gold]; g -> d[color=gold]; g -> e[color=gold]; g -> f[color=gold]; g -> g[color=gold]; g -> h[color=gold]; rankdir=LR }


digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> a; a -> b; a -> c; a -> d; b -> a; b -> b; b -> c; b -> d; b -> e; b -> f; c -> a; c -> b; c -> c; c -> d; c -> e; c -> f; d -> a; d -> b; d -> c; d -> d; d -> e; d -> f; d -> g; e -> a; e -> b; e -> c; e -> d; e -> e; e -> f; e -> g; f -> a; f -> b; f -> c; f -> d; f -> e; f -> f; f -> g; f -> h; g -> a; g -> b; g -> c; g -> d; g -> e; g -> f; g -> g; g -> h; h -> a[color=magenta]; h -> b[color=magenta]; h -> c[color=magenta]; h -> d[color=magenta]; h -> e[color=magenta]; h -> f[color=magenta]; h -> g[color=magenta]; h -> h[color=magenta]; rankdir=LR }

La multiplication donne ces étapes pour G_6_pond_NS pondéré :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[label=4]; b -> a[label=3]; b -> c[label=7]; b -> d[label=2]; c -> b[label=7]; c -> d[label=5]; c -> f[label=4]; d -> c[label=5]; d -> e[label=8]; d -> f[label=6]; e -> d[label=8]; f -> c[label=8]; f -> d[label=6]; rankdir=LR }

Floyd-Warshall donne ces étapes pour G_6_pond_NS_bis pondéré :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; a -> b[label=4]; b -> a[label=3]; b -> c[label=7]; b -> d[label=2]; c -> b[label=7]; c -> d[label=5]; c -> f[label=4]; d -> c[label=5]; d -> e[label=8]; d -> f[label=6]; e -> d[label=8]; f -> c[label=8]; f -> d[label=6]; rankdir=LR }

L'algorithme de Dijkstra donne ce graphe pour le départ 0 :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> c[label=11]; a -> d[label=7]; a -> g[label=6]; b -> e[label=20]; b -> f[label=9]; c -> a[label=11]; c -> b[label=20]; d -> e[label=8]; e -> b[label=10]; f -> h[label=5]; g -> a[label=6]; g -> h[label=9]; h -> f[label=5]; rankdir=LR }

L'algorithme de Dijkstra donne ce graphe pour le départ 0 :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> c[label=11]; a -> g[label=6]; b -> e[label=20]; b -> f[label=9]; c -> a[label=11]; c -> b[label=20]; d -> e[label=8]; e -> b[label=10]; f -> e[label=5]; g -> a[label=6]; g -> g[label=9]; h -> d[label=12]; rankdir=LR }

Dijkstra qui maximise le minimum pour le départ 0 :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; a -> c[label=11]; a -> d[label=7]; a -> g[label=6]; b -> e[label=20]; b -> f[label=9]; c -> a[label=11]; c -> b[label=20]; d -> e[label=8]; e -> b[label=10]; f -> h[label=5]; g -> a[label=6]; g -> h[label=9]; h -> f[label=5]; rankdir=LR }

Le graphe de flot donné :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; a -> b[label="0 / 21"]; a -> e[label="0 / 9"]; b -> c[label="0 / 18"]; b -> e[label="0 / 3"]; b -> f[label="0 / 1"]; c -> b[label="0 / 12"]; c -> d[label="0 / 7"]; c -> e[label="0 / 5"]; c -> f[label="0 / 6"]; c -> h[label="0 / 1"]; d -> c[label="0 / 5"]; d -> f[label="0 / 4"]; d -> g[label="0 / 2"]; d -> i[label="0 / 16"]; e -> b[label="0 / 2"]; e -> c[label="0 / 3"]; e -> f[label="0 / 12"]; e -> h[label="0 / 3"]; f -> c[label="0 / 5"]; f -> d[label="0 / 6"]; f -> e[label="0 / 12"]; f -> g[label="0 / 5"]; f -> h[label="0 / 4"]; g -> d[label="0 / 2"]; g -> f[label="0 / 5"]; g -> h[label="0 / 2"]; g -> i[label="0 / 9"]; h -> e[label="0 / 2"]; h -> g[label="0 / 3"]; h -> i[label="0 / 6"]; {rank=same;a}; {rank=same;b,e}; {rank=same;c,f,h}; {rank=same;d,g}; {rank=same;i} }

Le graphe résiduel et son meilleur chemin augmentant :

graph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; {rank=same;a}; {rank=same;b,e}; {rank=same;c,f,h}; {rank=same;d,g}; {rank=same;i} }

Le graphe de flot final où les arcs saturés sont en rouge :

digraph{ a[label=a]; b[label=b]; c[label=c]; d[label=d]; e[label=e]; f[label=f]; g[label=g]; h[label=h]; i[label=i]; a -> b[label="0 / 21"]; a -> e[label="0 / 9"]; b -> c[label="0 / 18"]; b -> e[label="0 / 3"]; b -> f[label="0 / 1"]; c -> b[label="0 / 12"]; c -> d[label="0 / 7"]; c -> e[label="0 / 5"]; c -> f[label="0 / 6"]; c -> h[label="0 / 1"]; d -> c[label="0 / 5"]; d -> f[label="0 / 4"]; d -> g[label="0 / 2"]; d -> i[label="0 / 16"]; e -> b[label="0 / 2"]; e -> c[label="0 / 3"]; e -> f[label="0 / 12"]; e -> h[label="0 / 3"]; f -> c[label="0 / 5"]; f -> d[label="0 / 6"]; f -> e[label="0 / 12"]; f -> g[label="0 / 5"]; f -> h[label="0 / 4"]; g -> d[label="0 / 2"]; g -> f[label="0 / 5"]; g -> h[label="0 / 2"]; g -> i[label="0 / 9"]; h -> e[label="0 / 2"]; h -> g[label="0 / 3"]; h -> i[label="0 / 6"]; {rank=same;a}; {rank=same;b,e}; {rank=same;c,f,h}; {rank=same;d,g}; {rank=same;i} }


Bye !
